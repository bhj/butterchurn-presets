{"baseVals":{"rating":2,"gammaadj":1,"decay":1,"echo_zoom":1.22,"echo_orient":2,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"solarize":1,"invert":1,"wave_a":11.202,"wave_scale":0.976,"wave_smoothing":0.9,"wave_mystery":-0.5,"warpscale":2.853,"fshader":1,"zoom":1.00034,"warp":0,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_r":1,"ob_a":0.16,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.54279,"r":0,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q3=0;a.q2=0;a.q1=0;","frame_eqs_str":"a.x+=.362*Math.cos(2.452*a.time);a.y+=.352*Math.sin(1.52*a.time);a.r=a.q3;a.b=a.q2;a.g=1-Math.abs(a.q1);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.33004,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q3=0;a.q1=0;a.q2=0;","frame_eqs_str":"a.x+=.362*Math.sin(2.452*a.time);a.y+=.352*Math.cos(1.52*a.time);a.x+=.362*Math.sin(.1952*a.time);a.y+=.352*Math.cos(.32*a.time);a.r=1-Math.abs(a.q3);a.g=a.q1;a.b=1-Math.abs(a.q2);"},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":""},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+.02*a.bass*Math.sin(20*a.sample*a.time);a.y=.5+.02*a.bass*Math.cos(20*a.sample*a.time);a.r=1+.5*Math.sin(2*a.sample+10*a.time);a.g=1+.5*Math.sin(2*a.sample+50*a.time);a.b=1+.5*Math.sin(2*a.sample+20*a.time);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.tg3=0;a.rg2=0;a.rg4=0;a.rg5=0;a.pfdx_r=0;a.pfthresh=0;a.du=0;a.thresh=0;a.q1=0;a.x=0;a.dy_r=0;a.tg2=0;a.tg1=0;a.mult=0;a.rg3=0;a.pfdy_r=0;a.ang2=0;a.dv=0;a.rg1=0;a.rg6=0;a.xy1=0;a.dx_r=0;a.y=0;a.q2=0;a.dist=0;a.q3=0;a.q7=0;a.xy2=0;a.q8=0;","frame_eqs_str":"a.wave_r=.65+.5*Math.sin(1.13*a.time);a.wave_g=.65+.5*Math.sin(1.23*a.time);a.wave_b=.65+.5*Math.sin(1.33*a.time);a.q1=a.wave_r;a.q2=a.wave_g;a.q3=a.wave_b;a.xy1=a.x*above(Math.sin(a.time),0)+a.y*below(Math.sin(a.time),0);a.xy2=a.x*below(Math.sin(a.time),0)+a.y*above(Math.sin(a.time),0);a.q1=a.xy1;a.q2=a.xy2;a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;\na.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.rg4=Math.abs(Math.sin(.4*a.time));a.rg5=0*above(a.rg4,.75)+1*below(a.rg4,.25)+2*above(a.rg4,.25)*below(a.rg4,.5)+3*below(a.rg4,.75)*above(a.rg4,.5);a.rg6=.00001<Math.abs(equal(a.thresh,2))?a.rg5:a.rg6;a.echo_orient+=a.rg6;a.decay=Math.min(.995+Math.abs(.05*Math.sin(a.time)),1);a.pfthresh=2*above(a.bass_att,a.pfthresh)+(1-above(a.bass_att,a.pfthresh))*(.96*(a.pfthresh-1.3)+1.3);a.pfdx_r=.015*equal(a.pfthresh,2)*Math.sin(5*\na.time)+(1-equal(a.pfthresh,2))*a.pfdx_r;a.pfdy_r=.015*equal(a.pfthresh,2)*Math.sin(6*a.time)+(1-equal(a.pfthresh,2))*a.pfdy_r;a.rg1=Math.abs(Math.sin(.76*a.time));a.rg2=0*above(a.rg1,.5)+1*below(a.rg1,.5);a.rg3=.00001<Math.abs(equal(a.pfthresh,2))?a.rg2:a.rg3;a.invert=1;a.darken=1-a.invert;a.echo_alpha-=.1*a.rg6;a.brighten=a.invert;","pixel_eqs_str":"a['thresh']=((above(a['bass_att'], a['thresh'])*2)+((1-above(a['bass_att'], a['thresh']))*(((a['thresh']-1.3)*0.96)+1.3))); a['dx_r']=(((equal(a['thresh'], 2)*0.015)*Math.sin((5*a['time'])))+((1-equal(a['thresh'], 2))*a['dx_r'])); a['dy_r']=(((equal(a['thresh'], 2)*0.015)*Math.sin((6*a['time'])))+((1-equal(a['thresh'], 2))*a['dy_r'])); a['zoom']=(a['zoom']+Math.abs((0.05*(((3*(0.5-a['rad']))*a['bass_att'])*4)))); a['zoom']=(a['zoom']+((Math.abs(above(a['bass_att'], 1.2))>0.00001)?((0.06*Math.sin((24*a['time'])))):(0))); a['thresh']=((above(a['bass_att'], a['thresh'])*2)+((1-above(a['bass_att'], a['thresh']))*(((a['thresh']-1.3)*0.96)+1.3))); a['dx_r']=(((equal(a['thresh'], 2)*0.015)*Math.sin((5*a['time'])))+((1-equal(a['thresh'], 2))*a['dx_r'])); a['dy_r']=(((equal(a['thresh'], 2)*0.015)*Math.sin((6*a['time'])))+((1-equal(a['thresh'], 2))*a['dy_r'])); a['tg1']=Math.abs(Math.sin((8*a['time']))); a['tg2']=(((8*above(a['tg1'], 0.75))+(12*below(a['tg1'], 0.25)))+((16*above(a['tg1'], 0.25))*below(a['tg1'], 0.5))); ((24*above(a['tg1'], 0.5))*below(a['tg1'], 0.75)) a['tg3']=((Math.abs(equal(a['thresh'], 2))>0.00001)?(a['tg2']):(a['tg3'])); a['zoom']=(a['zoom']+Math.abs(((3*a['rad'])*a['dx_r']))); a['dx']=(a['dx']+((a['dx_r']*Math.sin(Math.sin((12+(a['tg3']*a['y'])))))*Math.sin((3+(a['tg3']*a['x']))))); a['dy']=(a['dy']+((a['dy_r']*Math.sin(Math.sin((12+(a['tg3']*a['y'])))))*Math.sin((3+(a['tg3']+a['x']))))); a['thresh']=((above(a['bass_att'], a['thresh'])*2)+((1-above(a['bass_att'], a['thresh']))*(((a['thresh']-1.3)*0.96)+1.3))); a['dx_r']=(((equal(a['thresh'], 2)*0.015)*Math.sin((5*a['time'])))+((1-equal(a['thresh'], 2))*a['dx_r'])); a['dy_r']=(((equal(a['thresh'], 2)*0.015)*Math.sin((6*a['time'])))+((1-equal(a['thresh'], 2))*a['dy_r'])); a['tg1']=Math.abs(Math.sin(a['time'])); a['tg2']=(((((12*above(a['tg1'], 0.8))+(4*below(a['tg1'], 0.2)))+((6*above(a['tg1'], 0.2))*below(a['tg1'], 0.4)))+((8*above(a['tg1'], 0.4))*below(a['tg1'], 0.6)))+((10*above(a['tg1'], 0.6))*below(a['tg1'], 0.8))); a['tg3']=((Math.abs(equal(a['thresh'], 2))>0.00001)?(a['tg2']):(a['tg3'])); a['zoom']=((a['zoom']+0.6)-(1.3*Math.abs(((((12*a['dx_r'])*Math.cos((a['tg3']*a['ang'])))-(Math.sin(((14*a['dy_r'])*a['rad']))*0.5))-a['rad'])))); a['thresh']=((above(a['bass_att'], a['thresh'])*2)+((1-above(a['bass_att'], a['thresh']))*(((a['thresh']-1.3)*0.96)+1.3))); a['dx_r']=(((equal(a['thresh'], 2)*0.015)*Math.sin((5*a['time'])))+((1-equal(a['thresh'], 2))*a['dx_r'])); a['dy_r']=(((equal(a['thresh'], 2)*0.015)*Math.sin((6*a['time'])))+((1-equal(a['thresh'], 2))*a['dy_r'])); a['zoom']=(a['zoom']+0.01); a['zoom']=(a['zoom']+((0.05+(0.04*Math.sin(a['time'])))*(0.2*Math.sin((a['ang']*a['time']))))); a['rot']=(a['rot']+(0.01*(0.5*Math.cos((((a['ang']*5)*a['bass'])*a['time']))))); a['dx']=(a['dx']+((0.1*above(a['rad'], 0.25))*a['dx_r'])); a['dy']=(a['dy']+((0.1*above(a['rad'], 0.25))*a['dy_r'])); a['rot']=((0.1*pow(-a['ang'], 3))-(1.18*Math.sin(a['ang']))); a['zoom']=(((1.45*Math.sin(-a['rad']))+1.3)+Math.sin(a['rad'])); a['dx']=(a['dx']+(0.09*Math.sin((a['q8']*0.785)))); a['dy']=(a['dy']+(0.09*Math.sin((a['q8']*0.675)))); a['thresh']=((above(a['bass_att'], a['thresh'])*2)+((1-above(a['bass_att'], a['thresh']))*(((a['thresh']-1.3)*0.96)+1.3))); a['dx_r']=(((equal(a['thresh'], 2)*0.015)*Math.sin((5*a['time'])))+((1-equal(a['thresh'], 2))*a['dx_r'])); a['dy_r']=(((equal(a['thresh'], 2)*0.015)*Math.sin((6*a['time'])))+((1-equal(a['thresh'], 2))*a['dy_r'])); a['rot']=(((a['rot']+(0.00006*(0.1*a['time'])))+(0.5*(0.5-a['rad'])))+a['rad']); a['rot']=(a['rot']-(0.1*sqr(((0.5*Math.cos((a['ang']*a['time'])))*a['bass_att'])))); a['zoom']=(a['zoom']-(0.09*((Math.sin((1-a['rad']))*0.25)*(0.25*(5-a['rad']))))); a['zoom']=(a['zoom']-((0.05*above(a['y'], 0.5))*sqr((((0.5*Math.sin((a['ang']*a['time'])))*0.1)*a['bass_att'])))); a['zoom']=(a['zoom']-((0.05*below(a['y'], 0.5))*sqr((((0.5*Math.cos((a['ang']*a['time'])))*0.1)*a['treb_att'])))); a['du']=(((a['x']*2)-1)-a['q1']); a['dv']=(((a['y']*2)-1)-a['q2']); a['dist']=sqrt(((a['du']*a['du'])+(a['dv']*a['dv']))); a['ang2']=(Math.atan2(a['du'], a['dv'])+(a['time']*0.15)); a['mult']=(0.65*Math.sin((a['dist']*0.05))); a['dx']=(a['mult']*Math.sin(((a['ang2']*2)-1.5))); a['dy']=(a['mult']*Math.cos(((a['ang2']*2)-1.5))); a['rot']=((0.1*pow(-a['ang'], 3))-(1.18*Math.sin(a['ang']))); a['zoom']=(((2*Math.sin(-a['rad']))+1.3)+Math.sin(a['rad'])); a['dx']=(a['dx']+(0.09*Math.sin((a['q8']*0.785)))); a['dy']=(a['dy']+(0.09*Math.sin((a['q8']*0.675)))); a['zoom']=(a['zoom']+a['q7']);","warp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_noise_lq, ((\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\n   / 2.0) + q23)) + 1.0).xyz;\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\n  tmpvar_4.y = tmpvar_3.y;\n  ret_1 = ((-0.4 * (\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\n   - \n    (tmpvar_2 * 0.1)\n  )) + (texture (sampler_main, (uv + \n    (tmpvar_3 * 0.01)\n  .xy)).xyz + (tmpvar_2 * 0.1)));\n  float tmpvar_5;\n  tmpvar_5 = (1.0 - ((0.01 * q28) * (q28 * rad)));\n  ret_1 = (ret_1 * (0.98 * (tmpvar_5 * tmpvar_5)));\n  ret_1 = (ret_1 - 0.04);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","comp":"uniform sampler2D sampler_rand00;\n shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = ((texture (sampler_rand00, fract(\n    ((1.0 - ((\n      (texture (sampler_blur2, uv).xyz * scale2)\n     + bias2).yx * 0.6)) + (time * vec2(0.057, 0.036)))\n  )) * (\n    (1.0 + texture (sampler_main, uv).x)\n   + \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  .y)) * 0.4).xyz;\n  ret = tmpvar_1.xyz;\n }"}